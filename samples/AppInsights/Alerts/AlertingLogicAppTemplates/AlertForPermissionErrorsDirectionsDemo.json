{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "Logic App Name": {
        "defaultValue": "PermissionErrorNotification",
        "type": "String",
        "metadata": {
          "description": "Enter the name for the Logic App Resource"
        }
      },
      "AppInsights API Connection Name": {
        "defaultValue": "applicationinsights",
        "type": "String",
        "metadata": {
          "description": "Enter the name for the AppInsights API Connection. If you already have an API Connection resource for AppInsights in your subscription you can enter the name of the existing resource to reuse it for this Logic App."
        }
      },
      "Teams Connection Name": {
        "defaultValue": "teams",
        "type": "String",
        "metadata": {
          "description": "Enter the name for the Teams API Connection. If you already have an API Connection resource for Outlook in your subscription you can enter the name of the existing resource to reuse it for this Logic App."
        }
      },
      "Teams Group ID": {
        "defaultValue": "1e3e47a6-9385-4481-a254-0c6d5f0be480",
        "type": "String",
        "metadata": {
            "description": "Enter the Teams Group ID to be used for sending adaptive cards."
        }
    },
    "Teams Channel ID": {
        "defaultValue": "19:-TY-56K2SmEEjKOOBLzpljrU7acmxuAYuSOY8r0X8pw1@thread.tacv2",
        "type": "String",
        "metadata": {
            "description": "Enter the Teams Channel ID to be used for sending adaptive cards."
        }
    },
  "Alert Frequency in Minutes": {
        "defaultValue": 15,
        "type": "int",
        "minValue": 1,
        "metadata": {
          "description": "Set the frequency in minutes for which you want to check for deleted environments."
        }
      }
    },
    "variables": {},
    "resources": [
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[parameters('AppInsights API Connection Name')]",
        "location": "[resourcegroup().location]",
        "kind": "V1",
        "properties": {
          "displayName": "AppInsights",
          "statuses": [
            {
              "status": "Connected"
            }
          ],
          "customParameterValues": {},
          "api": {
            "name": "[parameters('AppInsights API Connection Name')]",
            "displayName": "Azure Application Insights",
            "description": "Azure Application Insights is an extensible analytics service that helps you understand the performance and usage of your live web application. Connect to your Application Insights resource to run and visualize various Analytics queries.",
            "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1570/1.0.1570.2764/', parameters('AppInsights API Connection Name'), '/icon.png')]",
            "brandColor": "#68217A",
            "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourcegroup().location, '/managedApis/', parameters('AppInsights API Connection Name'))]",
            "type": "Microsoft.Web/locations/managedApis"
          },
          "testLinks": []
        }
      },
      {
        "type": "Microsoft.Web/connections",
        "apiVersion": "2016-06-01",
        "name": "[parameters('Teams Connection Name')]",
        "location": "[resourcegroup().location]",
        "kind": "V1",
        "properties": {
          "displayName": "[parameters('Teams Connection Name')]",
          "statuses": [
            {
              "status": "Connected"
            }
          ],
          "customParameterValues": {},
          "nonSecretParameterValues": {},
          "api": {
            "name": "[parameters('Teams Connection Name')]",
            "displayName": "Microsoft Teams",
            "description": "Microsoft Teams enables you to get all your content, tools and conversations in the Team workspace with Office 365.",
            "iconUri": "[concat('https://connectoricons-prod.azureedge.net/releases/v1.0.1588/1.0.1588.2938/', parameters('Teams Connection Name'), '/icon.png')]",
            "brandColor": "#4B53BC",
            "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourcegroup().location, '/managedApis/', parameters('Teams Connection Name'))]",
            "type": "Microsoft.Web/locations/managedApis"
          },
          "testLinks": [
            {
              "requestUri": "[concat('https://management.azure.com:443/', resourceGroup().id, '/providers/Microsoft.Web/connections/', parameters('Teams Connection Name'), '/extensions/proxy/beta/me/teamwork?api-version=2016-06-01')]",
              "method": "get"
            }
          ]
        }
      },
      {
        "type": "Microsoft.Logic/workflows",
        "apiVersion": "2017-07-01",
        "name": "[parameters('Logic App Name')]",
        "location": "[resourcegroup().location]",
        "dependsOn": [
          "[resourceId('Microsoft.Web/connections', parameters('AppInsights API Connection Name'))]",
          "[resourceId('Microsoft.Web/connections', parameters('Teams Connection Name'))]"
        ],
        "properties": {
          "state": "Enabled",
          "definition": {
            "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
            "contentVersion": "1.0.0.0",
            "parameters": {
              "$connections": {
                "defaultValue": {},
                "type": "Object"
              }
            },
            "triggers": {
              "Recurrence": {
                "recurrence": {
                  "frequency": "Minute",
                  "interval": "[parameters('Alert Frequency in Minutes')]"
                },
                "evaluatedRecurrence": {
                  "frequency": "Minute",
                  "interval": "[parameters('Alert Frequency in Minutes')]"
                },
                "type": "Recurrence"
              }
            },
            "actions": {
                "For_each": {
                    "foreach": "@body('Run_Analytics_query')?['value']",
                    "actions": {
                        "Condition": {
                            "actions": {
                                "Create_a_chat": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "members": "scott@bcdemocustomer503.onmicrosoft.com"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['teams']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/beta/chats"
                                    }
                                },
                                "Post_message_in_a_chat_or_channel": {
                                    "runAfter": {
                                        "Create_a_chat": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "body": {
                                            "messageBody": "<p>@{body('Parse_JSON')?['data']?['message']}</p>",
                                            "recipient": "@body('Create_a_chat')?['id']"
                                        },
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['teams']['connectionId']"
                                            }
                                        },
                                        "method": "post",
                                        "path": "/beta/teams/conversation/message/poster/@{encodeURIComponent('User')}/location/@{encodeURIComponent('Group chat')}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "expression": {
                                "and": [
                                    {
                                        "equals": [
                                            "@body('Parse_JSON')?['submitActionId']",
                                            "OK"
                                        ]
                                    }
                                ]
                            },
                            "type": "If"
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "Post_adaptive_card_and_wait_for_a_response": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('Post_adaptive_card_and_wait_for_a_response')",
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "message": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "messageId": {
                                            "type": "string"
                                        },
                                        "messageLink": {
                                            "type": "string"
                                        },
                                        "responder": {
                                            "properties": {
                                                "displayName": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "objectId": {
                                                    "type": "string"
                                                },
                                                "tenantId": {
                                                    "type": "string"
                                                },
                                                "userPrincipalName": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "responseTime": {
                                            "type": "string"
                                        },
                                        "submitActionId": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        },
                        "Post_adaptive_card_and_wait_for_a_response": {
                            "runAfter": {},
                            "type": "ApiConnectionWebhook",
                            "inputs": {
                                "body": {
                                    "body": {
                                            //alternative page id is 8907 for individual user (requires bookmark) or 9855 for permission management. Page id including bookmark is page=9807&dc=0&bookmark=24%3beJQ1dwCRIbAdRE6vH0KTrZvrSof6MA%3d%3d. Environment parameter is @{items('For_each')?['EnvironmentName']}
                                        "messageBody": "{\n    \"type\": \"AdaptiveCard\",\n    \"version\": \"1.4\",\n    \"hideOriginalBody\": true,\n    \"body\": [\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"@{items('For_each')?['message']}\",\n            \"size\": \"Large\"\n        },\n        {\n            \"type\": \"TextBlock\",\n            \"text\": \"Review and correct permissions in the environment if required.\"\n        },\n        {\n            \"type\": \"FactSet\",\n            \"facts\": [\n                {\n                    \"title\": \"Environment Name\",\n                    \"value\": \"Production\"\n                },\n                {\n                    \"title\": \"Company Name\",\n                    \"value\": \"@{items('For_each')?['companyName']}\"\n                },\n                {\n                    \"title\": \"Permission Area\",\n                    \"value\": \"@{items('For_each')?['permissionArea']}\"\n                },\n                {\n                    \"title\": \"Permission Type\",\n                    \"value\": \"@{items('For_each')?['permissionType']}\"\n                },\n                {\n                    \"title\": \"Table Name\",\n                    \"value\": \"Customer\"\n                },\n                {\n                    \"title\": \"Application\",\n                    \"value\": \"Base Application\"\n                },\n                {\n                    \"title\": \"User ID\",\n                    \"value\": \"@{items('For_each')?['user_Id']}\"\n                },\n                {\n                    \"title\": \"User\",\n                    \"value\": \"scott@bcdemocustomer503.onmicrosoft.com\"\n                }\n            ]\n        }\n    ],\n    \"actions\": [\n        {\n            \"type\": \"Action.OpenUrl\",\n            \"title\": \"Manage user permissions\",\n            \"url\": \"https://businesscentral.dynamics.com/@{items('For_each')?['AADTenantId']}/DirDemoAidaUS?page=9800\"\n        },\n        {\n            \"type\": \"Action.ShowCard\",\n            \"title\": \"Send user message\",\n            \"card\": {\n                \"type\": \"AdaptiveCard\",\n                \"body\": [\n                    {\n                        \"type\": \"Input.Text\",\n                        \"id\": \"message\",\n                        \"placeholder\": \"Send a message\",\n                        \"isMultiline\": true\n                    }\n                ],\n                \"actions\": [\n                    {\n                        \"type\": \"Action.Submit\",\n                        \"title\": \"OK\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\"\n}",
                                        "recipient": {
                                            "channelId": "[parameters('Teams Channel ID')]",
                                            "groupId": "[parameters('Teams Group ID')]"
                                        },
                                        "updateMessage": "Your message was sent!"
                                    },
                                    "notificationUrl": "@{listCallbackUrl()}"
                                },
                                "host": {
                                    "connection": {
                                        "name": "@parameters('$connections')['teams']['connectionId']"
                                    }
                                },
                                "path": "/v1.0/teams/conversation/gatherinput/poster/Flow bot/location/@{encodeURIComponent('Channel')}/$subscriptions"
                            }
                        }
                    },
                    "runAfter": {
                        "Run_Analytics_query": [
                            "Succeeded"
                        ]
                    },
                    "type": "Foreach"
                },
              "Run_Analytics_query": {
                "runAfter": {},
                "type": "ApiConnection",
                "inputs": {
                  "body": "traces\n| where timestamp > ago(21d)\n| extend eventId = tostring(customDimensions.eventId)\n| where eventId == \"RT0031\"\n| extend errorMessage = tostring(customDimensions.errorMessage)\n| extend permissionArea = customDimensions.permissionArea\n| extend permissionType = customDimensions.permissionType\n| extend companyName = customDimensions.companyName\n| project message, errorMessage, user_Id, permissionArea, permissionType, companyName",
                  "host": {
                    "connection": {
                      "name": "@parameters('$connections')['applicationinsights']['connectionId']"
                    }
                  },
                  "method": "post",
                  "path": "/api/QueryDraft",
                  "queries": {
                    "version": "2"
                  }
                }
              }
            },
            "outputs": {}
          },
          "parameters": {
            "$connections": {
              "value": {
                "applicationinsights": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', parameters('AppInsights API Connection Name'))]",
                  "connectionName": "[parameters('AppInsights API Connection Name')]",
                  "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourcegroup().location, '/managedApis/', parameters('AppInsights API Connection Name'))]"
                },
                "teams": {
                  "connectionId": "[resourceId('Microsoft.Web/connections', parameters('Teams Connection Name'))]",
                  "connectionName": "[parameters('Teams Connection Name')]",
                  "id": "[concat(subscription().id, '/providers/Microsoft.Web/locations/', resourcegroup().location, '/managedApis/', parameters('Teams Connection Name'))]"
                }
              }
            }
          }
        }
      }
    ]
  }
